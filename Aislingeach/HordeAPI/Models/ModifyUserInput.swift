//
// ModifyUserInput.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ModifyUserInput: Codable {

    /** The amount of kudos to modify (can be negative) */
    public var kudos: Decimal?
    /** The amount of concurrent request this user can have */
    public var concurrency: Int?
    /** The amount by which to multiply the users kudos consumption */
    public var usageMultiplier: Decimal?
    /** Set to the amount of workers this user is allowed to join to the horde when in worker invite-only mode. */
    public var workerInvited: Int?
    /** Set to true to Make this user a horde moderator */
    public var moderator: Bool?
    /** Set to true to Make this user a display their worker IDs */
    public var publicWorkers: Bool?
    /** When specified, will start assigning the user monthly kudos, starting now! */
    public var monthlyKudos: Int?
    /** When specified, will change the username. No profanity allowed! */
    public var username: String?
    /** When set to true,the user and their servers will not be affected by suspicion */
    public var trusted: Bool?
    /** When set to true, the user cannot tranfer kudos and all their workers are put into permanent maintenance. */
    public var flagged: Bool?
    /** When set to true, the user will be able to serve custom Stable Diffusion models which do not exist in the Official AI Horde Model Reference. */
    public var customizer: Bool?
    /** When set to true, the user will be able to onboard workers behind a VPN. This should be used as a temporary solution until the user is trusted. */
    public var vpn: Bool?
    /** Set the user&#x27;s suspicion back to 0 */
    public var resetSuspicion: Bool?
    /** Contact details for the horde admins to reach the user in case of emergency. This is only visible to horde moderators. */
    public var contact: String?

    public init(kudos: Decimal? = nil, concurrency: Int? = nil, usageMultiplier: Decimal? = nil, workerInvited: Int? = nil, moderator: Bool? = nil, publicWorkers: Bool? = nil, monthlyKudos: Int? = nil, username: String? = nil, trusted: Bool? = nil, flagged: Bool? = nil, customizer: Bool? = nil, vpn: Bool? = nil, resetSuspicion: Bool? = nil, contact: String? = nil) {
        self.kudos = kudos
        self.concurrency = concurrency
        self.usageMultiplier = usageMultiplier
        self.workerInvited = workerInvited
        self.moderator = moderator
        self.publicWorkers = publicWorkers
        self.monthlyKudos = monthlyKudos
        self.username = username
        self.trusted = trusted
        self.flagged = flagged
        self.customizer = customizer
        self.vpn = vpn
        self.resetSuspicion = resetSuspicion
        self.contact = contact
    }

    public enum CodingKeys: String, CodingKey { 
        case kudos
        case concurrency
        case usageMultiplier = "usage_multiplier"
        case workerInvited = "worker_invited"
        case moderator
        case publicWorkers = "public_workers"
        case monthlyKudos = "monthly_kudos"
        case username
        case trusted
        case flagged
        case customizer
        case vpn
        case resetSuspicion = "reset_suspicion"
        case contact
    }

}
